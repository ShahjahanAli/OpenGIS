/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tools;

import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import main.GameScene;
import main.OpenGIS_MAIN;
import main.PressedButtonEnum;
import utility.ToolbarUtil;

/**
 *
 * @author ASUS
 */
public class DisplayIconTools extends javax.swing.JInternalFrame {

    private static Color foreColor;

    /**
     * Creates new form DisplayIconTools
     */
    private int measureButtonClick = 0;
    OpenGIS_MAIN MAIN;
    public GameScene gameScene;

    //measureButtonSelected will help determine if it is selected or not. If selected, then show 
    //relative  haeding and distances between two mouse clicks. 10 september, ratan
    public static boolean measureButtonSelected = false;

    public DisplayIconTools(OpenGIS_MAIN MAIN) {
        super("DisplayTools", false, true, false, false);
        this.MAIN = MAIN;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rulerToggleButton = new javax.swing.JToggleButton();
        ElevationProfileDraw = new javax.swing.JButton();

        setTitle("Drawing Tool");
        setMaximumSize(new java.awt.Dimension(455, 69));
        setMinimumSize(new java.awt.Dimension(455, 69));
        setPreferredSize(new java.awt.Dimension(455, 69));
        getContentPane().setLayout(null);

        rulerToggleButton.setText("R");
        rulerToggleButton.setToolTipText("Ruler");
        rulerToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rulerToggleButtonActionPerformed(evt);
            }
        });
        getContentPane().add(rulerToggleButton);
        rulerToggleButton.setBounds(0, 0, 40, 40);

        ElevationProfileDraw.setText("E");
        ElevationProfileDraw.setToolTipText("Draw Dashed Line");
        ElevationProfileDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ElevationProfileDrawActionPerformed(evt);
            }
        });
        getContentPane().add(ElevationProfileDraw);
        ElevationProfileDraw.setBounds(40, 0, 40, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static Color setForeGroundColor() {
        foreColor = JColorChooser.showDialog(null, "ForeGround Color", foreColor);

        return foreColor;
    }

    private void rulerToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rulerToggleButtonActionPerformed
        if (ToolbarUtil.getLastClickedComponent() != null) {
            ToolbarUtil.getLastClickedComponent().setBorder(null);
        }
        if (measureButtonSelected) {
            measureButtonSelected = false;
            MAIN.lastPressedButton = PressedButtonEnum.NONE;
        } else {
            measureButtonSelected = true;
            MAIN.lastPressedButton = PressedButtonEnum.MEASURE_TOOL;
        }
        ToolbarUtil.setLastClickedComponent(this.rulerToggleButton);
    }//GEN-LAST:event_rulerToggleButtonActionPerformed

    private void ElevationProfileDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElevationProfileDrawActionPerformed
        if (ToolbarUtil.getLastClickedComponent() != null) {
            ToolbarUtil.getLastClickedComponent().setBorder(null);
        }
        this.ElevationProfileDraw.setBorder(ToolbarUtil.getSelectedBorder());
        ToolbarUtil.setLastClickedComponent(this.ElevationProfileDraw);
        MAIN.lastPressedButton = PressedButtonEnum.Draw_ElevationProfile;
    }//GEN-LAST:event_ElevationProfileDrawActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayIconTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayIconTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayIconTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayIconTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new DisplayIconTools().setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new DisplayIconTools().setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new DisplayIconTools().setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new DisplayIconTools().setVisible(true);
//            }
//        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ElevationProfileDraw;
    private javax.swing.JToggleButton rulerToggleButton;
    // End of variables declaration//GEN-END:variables
}
